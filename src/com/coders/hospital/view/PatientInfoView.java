/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.coders.hospital.view;

import com.coders.hospital.db.dao.PatientInfoDao;
import com.coders.hospital.db.dao.UserDetailsDao;
import com.coders.hospital.db.dao.UsersDao;
import com.coders.hospital.db.vo.PatientInfoVo;
import com.coders.hospital.db.vo.UserDetailsVo;
import com.coders.hospital.db.vo.UsersVo;
import com.coders.hospital.validation.Validation;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Codersbay
 */
public class PatientInfoView extends javax.swing.JFrame {

    /**
     * Creates new form PatientInfoView
     */
    public PatientInfoView() {
        initComponents();
        
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtFatherName = new javax.swing.JTextField();
        txtMobile = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtUserId = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnGetMessage = new javax.swing.JButton();

        jLabel1.setText("ID");

        jLabel2.setText("First name");

        jLabel3.setText("Father name");

        jLabel4.setText("Mobile");

        jLabel5.setText("Email");

        jLabel6.setText("User id");

        btnAdd.setText("add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnGetMessage.setText("Get message");
        btnGetMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetMessageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtId)
                    .addComponent(txtFirstName)
                    .addComponent(txtFatherName)
                    .addComponent(txtMobile)
                    .addComponent(txtEmail)
                    .addComponent(txtUserId, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 110, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                        .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnGetMessage))
                .addGap(42, 42, 42))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnEdit, btnGetMessage, btnSearch});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btnDelete)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFatherName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnEdit)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnSearch)))
                .addGap(18, 18, 18)
                .addComponent(btnGetMessage)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel3, jLabel4, jLabel5});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText(),txtFirstName.getText(),txtFatherName.getText(),txtMobile.getText(),txtEmail.getText(),txtUserId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText(),txtUserId.getText(),txtMobile.getText());
        boolean isText = Validation.isText( txtFirstName.getText(), txtFatherName.getText(),txtEmail.getText());
        if (isTextEmpty == true ) {
            JOptionPane.showMessageDialog(null, "please inter valid data thanks ");
            return;
        }
        if (isDigit == false || isText == false) {
            JOptionPane.showMessageDialog(null, "please inter valid data please ");
            return;
        }
        int id =Integer.valueOf( txtId.getText());
        String firstName = txtFirstName.getText();
        String fatherName = txtFatherName.getText();
        String mobile = txtMobile.getText();
        String email = txtEmail.getText();
        int userId = Integer.parseInt(txtUserId.getText());
        PatientInfoVo   patientInfoVo = new PatientInfoVo();
        patientInfoVo.setId(id);
        patientInfoVo.setFirstName(firstName);
        patientInfoVo.setFatherName(fatherName);
        patientInfoVo.setMobile(mobile);
        patientInfoVo.setEmail(email);
        UsersVo usersVo= new UsersVo();
        usersVo.setId(userId);
        patientInfoVo.setUsersVo(usersVo);



        
  try {
            int count = PatientInfoDao.getInstance().insert(patientInfoVo);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "insert successfully ");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, " failure insert failed  ");
            }
        } catch (Exception ex) {

            throw new RuntimeException(ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText());
        if (isTextEmpty == true) {
            JOptionPane.showMessageDialog(null, "please inter valid data  ");
            return;
        }
        if (isDigit == false) {
            JOptionPane.showMessageDialog(null, "please inter valid data  ");
            return;
        }

        int id = Integer.valueOf(txtId.getText());// VALUE WHICH USER ENTER
        PatientInfoVo patientInfoVo = new PatientInfoVo();
        patientInfoVo.setId(id);
        try {
            PatientInfoVo piv = PatientInfoDao.getInstance().getDataById(id);
            if (piv == null) {
                JOptionPane.showMessageDialog(null, "please enter valid data ");
                return;
            }
            int count = PatientInfoDao.getInstance().delete(patientInfoVo);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "Delete successfully ");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, " failure Delete failed  ");
            }
        } catch (Exception ex) {

            throw new RuntimeException(ex);
        }









    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        boolean isTextEmpty = Validation.isEmpty(txtId.getText(),txtFirstName.getText(),txtFatherName.getText(),txtMobile.getText(),txtEmail.getText(),txtUserId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText(),txtUserId.getText(),txtMobile.getText());
        boolean isText = Validation.isText( txtFirstName.getText(), txtFatherName.getText(),txtEmail.getText());
        if (isTextEmpty == true ) {
            JOptionPane.showMessageDialog(null, "please inter valid data thanks ");
            return;
        }
        if (isDigit == false || isText == false) {
            JOptionPane.showMessageDialog(null, "please inter valid data please ");
            return;
        }
        int id =Integer.valueOf( txtId.getText());
        String firstName = txtFirstName.getText();
        String fatherName = txtFatherName.getText();
        String mobile = txtMobile.getText();
        String email = txtEmail.getText();
        int userId = Integer.parseInt(txtUserId.getText());
        PatientInfoVo   patientInfoVo = new PatientInfoVo();
        patientInfoVo.setId(id);
        patientInfoVo.setFirstName(firstName);
        patientInfoVo.setFatherName(fatherName);
        patientInfoVo.setMobile(mobile);
        patientInfoVo.setEmail(email);
        UsersVo usersVo= new UsersVo();
        usersVo.setId(userId);
        patientInfoVo.setUsersVo(usersVo);



        
  try {
         PatientInfoVo piv = PatientInfoDao.getInstance().getDataById(id);
            if (piv == null) {
                JOptionPane.showMessageDialog(null, "please enter valid data ");
                return;
            }
            int count = PatientInfoDao.getInstance().update(patientInfoVo);
            if (count == 1) {
                JOptionPane.showMessageDialog(null, "update successfully ");
                reset();
            } else {
                JOptionPane.showMessageDialog(null, " failure update failed  ");
            }
        } catch (Exception ex) {

            throw new RuntimeException(ex);
        }









    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        boolean isTextEmpty = Validation.isEmpty(txtId.getText());
        boolean isDigit = Validation.isDigit(txtId.getText());
        if (isTextEmpty == true) {
            JOptionPane.showMessageDialog(null, "please inter valid ID  ");
            return;
        }
        if (isDigit == false) {
            JOptionPane.showMessageDialog(null, "please inter valid ID please ");
            return;
        }
        int id = Integer.valueOf(txtId.getText());
        try {

            PatientInfoVo patientInfoVo = PatientInfoDao.getInstance().getDataById(id);
            
            if (patientInfoVo == null) {
                JOptionPane.showMessageDialog(null, "ID not exist");
                reset();
            } else {
                txtFirstName.setText(patientInfoVo.getFirstName());
                txtFatherName.setText(patientInfoVo.getFatherName());
                txtMobile.setText(patientInfoVo.getMobile());
                txtEmail.setText(patientInfoVo.getEmail());
                txtUserId.setText(String.valueOf(patientInfoVo.getUsersVo().getId()));


            }
        } catch (Exception ex) {
            System.out.println(ex);
            throw new RuntimeException(ex); 
        }



    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnGetMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetMessageActionPerformed
    MessageView messageView=new MessageView();
    messageView.setVisible(true);
    





    }//GEN-LAST:event_btnGetMessageActionPerformed

    protected void reset(){
        txtId.setText("");
        txtFirstName.setText("");
        txtFatherName.setText("");
        txtMobile.setText("");
        txtEmail.setText("");
        txtUserId.setText("");
    }
    
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientInfoView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientInfoView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnGetMessage;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFatherName;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtUserId;
    // End of variables declaration//GEN-END:variables
}
